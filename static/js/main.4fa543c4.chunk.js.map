{"version":3,"sources":["firebase.js","components/AddTask.js","components/Task.js","App.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","AddTask","useState","title","setTitle","handleSubmit","e","a","preventDefault","addDoc","collection","createdAt","Date","completed","onSubmit","className","type","placeholder","value","onChange","target","Task","task","toggleComplete","handleDelete","style","textDecoration","onClick","id","App","tasks","setTasks","useEffect","q","query","unsub","onSnapshot","querySnapshot","tasksArray","forEach","doc","push","data","updateDoc","deleteDoc","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAaMA,EAAMC,YATW,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAIHC,EAAKC,YAAaT,G,OCoBTU,EA9BC,WACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,6DACnBD,EAAEE,iBADiB,SAEbC,YAAOC,YAAWX,EAAI,SAAU,CACpCI,QACAQ,UAAW,IAAIC,KACfC,WAAW,IALM,OAOnBT,EAAS,IAPU,2CAAH,sDASlB,OACE,uBAAMU,SAAUT,EAAhB,UACE,gDACA,qBAAKU,UAAU,kBAAf,SACE,uBACEC,KAAK,OACLC,YAAY,2BACZC,MAAOf,EACPgB,SAAU,SAACb,GAAD,OAAOF,EAASE,EAAEc,OAAOF,YAGvC,qBAAKH,UAAU,gBAAf,SACE,mDCXOM,EAfF,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aACpC,OACE,sBAAKT,UAAU,OAAf,UACE,mBACEU,MAAO,CAAEC,eAAgBJ,EAAKT,WAAa,gBAC3Cc,QAAS,kBAAMJ,EAAeD,IAFhC,SAIGA,EAAKnB,QAGR,wBAAQwB,QAAS,kBAAMH,EAAaF,EAAKM,KAAzC,mBCyCSC,EAvCH,WACV,MAA0B3B,mBAAS,IAAnC,mBAAO4B,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACR,IAAMC,EAAIC,YAAMxB,YAAWX,EAAI,UACzBoC,EAAQC,YAAWH,GAAG,SAACI,GAC3B,IAAIC,EAAa,GACjBD,EAAcE,SAAQ,SAACC,GACrBF,EAAWG,KAAX,2BAAqBD,EAAIE,QAAzB,IAAiCd,GAAIY,EAAIZ,SAE3CG,EAASO,MAEX,OAAO,kBAAMH,OACZ,IAEH,IAAMZ,EAAc,uCAAG,WAAOD,GAAP,SAAAf,EAAA,sEACfoC,YAAUH,YAAIzC,EAAI,QAASuB,EAAKM,IAAK,CAAEf,WAAYS,EAAKT,YADzC,2CAAH,sDAIdW,EAAY,uCAAG,WAAOI,GAAP,SAAArB,EAAA,sEACbqC,YAAUJ,YAAIzC,EAAI,QAAS6B,IADd,2CAAH,sDAGlB,OACE,gCACE,cAAC,EAAD,IACA,qBAAKb,UAAU,iBAAf,SACGe,EAAMe,KAAI,SAACvB,GAAD,OACT,cAAC,EAAD,CAEEA,KAAMA,EACNC,eAAgBA,EAChBC,aAAcA,GAHTF,EAAKM,aCrCtBkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4fa543c4.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDfP1EfDlFCLKIG4AhwZ2z1itCdkeT9FRQ\",\r\n  authDomain: \"todo-e3555.firebaseapp.com\",\r\n  projectId: \"todo-e3555\",\r\n  storageBucket: \"todo-e3555.appspot.com\",\r\n  messagingSenderId: \"790716047921\",\r\n  appId: \"1:790716047921:web:a595cb52028f2e04baab10\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\n\r\nexport { db };\r\n","import { useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nconst AddTask = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await addDoc(collection(db, \"tasks\"), {\r\n      title,\r\n      createdAt: new Date(),\r\n      completed: false,\r\n    });\r\n    setTitle(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h3>Agregar Tareas</h3>\r\n      <div className=\"input_container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter para agregar tarea\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"btn_container\">\r\n        <button>Agregar</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\n\r\nconst Task = ({ task, toggleComplete, handleDelete }) => {\r\n  return (\r\n    <div className=\"task\">\r\n      <p\r\n        style={{ textDecoration: task.completed && \"line-through\" }}\r\n        onClick={() => toggleComplete(task)}\r\n      >\r\n        {task.title}\r\n      </p>\r\n\r\n      <button onClick={() => handleDelete(task.id)}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import \"./App.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AddTask from \"./components/AddTask\";\r\nimport Task from \"./components/Task\";\r\nimport {\r\n  collection,\r\n  query,\r\n  onSnapshot,\r\n  doc,\r\n  updateDoc,\r\n  deleteDoc,\r\n} from \"firebase/firestore\";\r\nimport { db } from \"./firebase\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(db, \"tasks\"));\r\n    const unsub = onSnapshot(q, (querySnapshot) => {\r\n      let tasksArray = [];\r\n      querySnapshot.forEach((doc) => {\r\n        tasksArray.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setTasks(tasksArray);\r\n    });\r\n    return () => unsub();\r\n  }, []);\r\n\r\n  const toggleComplete = async (task) => {\r\n    await updateDoc(doc(db, \"tasks\", task.id), { completed: !task.completed });\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteDoc(doc(db, \"tasks\", id));\r\n  };\r\n  return (\r\n    <div>\r\n      <AddTask />\r\n      <div className=\"task_container\">\r\n        {tasks.map((task) => (\r\n          <Task\r\n            key={task.id}\r\n            task={task}\r\n            toggleComplete={toggleComplete}\r\n            handleDelete={handleDelete}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}